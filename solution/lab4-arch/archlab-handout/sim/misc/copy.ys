# Execution begins at address 0
        .pos 0
        irmovq stack,%rsp
        call main
        halt
# Source block
        .align 8
src:
        .quad 0x00a
        .quad 0x0b0
        .quad 0xc00
# Destination block
dest:
        .quad 0x111
        .quad 0x222
        .quad 0x333
main:
        irmovq src,%rdi
        irmovq dest,%rsi
        irmovq $3,%rdx
        call   copy_block
        ret
# long copy_blcok(long *src,long *dest,long len)
# src in %rdi,dest in %rsi,len in %rdx
copy_block:
        xorq   %rax,%rax
        andq   %rdx,%rdx
        jmp    test
loop:
        mrmovq (%rdi),%rbx
        iaddq  $8,%rdi
        rmmovq %rbx,(%rsi)
        iaddq  $8,%rsi
        xorq   %rbx,%rax
        iaddq  $-1,%rdx
test:
        jg loop
        ret
# Stack starts here and grows to lower addresses
        .pos 0x200
stack:
