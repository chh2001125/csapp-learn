#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	    xorq %rax,%rax	    # count1 = 0;
        iaddq $-3,%rdx	    # limit = len -1 <= 0?
	    jle Done1	        # if so, goto Done:
Loop1:	mrmovq (%rdi), %r10	# read val from src...
	    rmmovq %r10, (%rsi) # ...and store it to dst
        mrmovq 8(%rdi), %r9 # read val from src...
        rmmovq %r9, 8(%rsi) # ...and store it to dst
        mrmovq 16(%rdi), %r8 # read val from src...
        rmmovq %r8, 16(%rsi) # ...and store it to dst
        mrmovq 24(%rdi), %r11 # read val from src...
        rmmovq %r11, 24(%rsi) # ...and store it to dst
	    andq %r10, %r10	    # val <= 0?
	    jle Npos1	        # if so, goto Npos:
	    iaddq $1, %rax	    # count++
Npos1:
        andq %r9, %r9     # val <= 0?
        jle Npos2           # if so, goto Npos:
        iaddq $1, %rax      # count++
Npos2:
        andq %r8, %r8     # val <= 0?
        jle Npos3           # if so, goto Npos:
        iaddq $1, %rax      # count++
Npos3:
        andq %r11, %r11     # val <= 0?
        jle Npos4           # if so, goto Npos:
        iaddq $1, %rax      # count++
Npos4:
	    iaddq $32, %rdi		 # src += 32
	    iaddq $32, %rsi	     # dst += 32
        iaddq $-4, %rdx      # len -= 4
	    jg Loop1		         # if so, goto Loop:
Done1:
        iaddq $3,%rdx
        jle Done2
Loop2:
        mrmovq (%rdi), %r10 # read val from src...
        rmmovq %r10, (%rsi) # ...and store it to dst
        andq %r10, %r10     # val <= 0?
        jle Npos5           # if so, goto Npos:
        iaddq $1, %rax      # count++
Npos5:
        iaddq $8, %rdi        # src += 32
        iaddq $8, %rsi        # dst += 32
        iaddq $-1, %rdx      # len -= 4
        jg Loop2                 # if so, goto Loop:
Done2:
##################################################################
# Do not modify the following section of code
# Function epilogue.
	    ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
